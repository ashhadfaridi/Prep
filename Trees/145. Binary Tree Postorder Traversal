class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        
        LinkedList<Integer> res = new LinkedList<>();
        Deque<TreeNode> stack = new ArrayDeque<>();
        TreeNode p = root ; 
        
        while(!stack.isEmpty() || p!= null){
            
            if( p!=null){
                
                stack.push(p);
                res.addFirst(p.val);
                p = p.right;
            }else {
                TreeNode node = stack.pop();
                p = node.left ; 
            }
            
        }
        return res;
    }
}

//recursion 
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        LinkedList<Integer> res = new LinkedList<>();
        process(root , res);
        return res;
    }
    void process(TreeNode root,LinkedList<Integer> res ){
        
        if(root !=null){
            process(root.left , res);
            process(root.right ,res);
            res.add(root.val);
        }
    }
}
