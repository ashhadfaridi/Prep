class Solution {
    public int[] getAverages(int[] nums, int k) {
        long sum = 0 ;
        int[] arr = new int[nums.length];
        
        for(int i =0 ;i<nums.length ; i++){
            sum =sum+ nums[i];
            if(i<k) arr[i]=-1;
            
            if(i >=2*k){
                
                arr[i-k] = (int) (sum/ (2*k+1));
                sum = sum - nums[i- 2*k];
            }
             if(i>= nums.length - k ) arr[i] = -1; 
        }
        return arr;
    }
}

//alternate solution

class Solution {
    public int[] getAverages(int[] nums, int k) {
        int window = 2*k+1;
        int j = 0 ; 
        int i = 0 ;
        long sum = 0 ;
        long avg = 0;
        int[] arr = new int[nums.length];
        int l=0;
        Arrays.fill(arr, -1);
        while(j<nums.length){
            
            sum= sum + nums[j];
            
            if(j-i+1<window) j++;
            
            else if(j-i+1==window) {
                
                avg = (int)sum/window;
                arr[k++] = (int)avg;
                
                sum = sum - nums[i];
                i++;
                j++;
            }
        }
        return arr; 
    }
}
